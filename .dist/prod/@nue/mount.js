var J=((k)=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(k,{get:(w,q)=>(typeof require!=="undefined"?require:w)[q]}):k)(function(k){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+k+'" is not supported')});async function M(k){const w=document.querySelector('[name="nue:components"]')?.getAttribute("content");if(!w)return[];const q=[];for(let z of w.split(" ")){if(z==k)z+=`?${++K}`;const{lib:y}=await import(z);if(y)q.push(...y)}return q}async function H(k){const w=document.querySelectorAll("[is]"),q=w[0]?await M(k):[];if(!q[0])return;const{createApp:z}=await import("./nue.js");for(let y of[...w]){const B=y.getAttribute("is"),F=y.nextElementSibling,I=F?.type=="application/json"?JSON.parse(F.textContent):{},G=q.find((C)=>C.name==B);if(G){const C=z(G,I,q).mount(y);D.push(C)}else if(customElements.get(B));else console.error(`Web or Nue component not fouind: "${B}"`)}}async function O(){D.forEach((k)=>k.unmount()),D=[]}var D=[],K=0;addEventListener("route",H);addEventListener("DOMContentLoaded",H);export{O as unmountAll,H as mountAll};
